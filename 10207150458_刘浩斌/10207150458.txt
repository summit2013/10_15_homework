操作系统调度作业 信管15班 刘浩斌

#include<iostream>
#include<iomanip>
using namespace std;
 static const int max=100;
 int time1[max];//arrivaltime
 int time2[max];//servicetime
 int time3[max];//finishtime
 int time4[max];//wholetime
 double wtime4[max];//weightwholetime
 double fcfs_atime4,sjf_atime4;//average wholetime
 double fcfs_awtime4,sjf_awtime4;//average weightwholetime
 int sjf[max];//it'll use in sjf
 int num=0;
 int nowtime=0;//now time
 double swtime=0,swwtime=0;//swtime is use for work out the sum of the wholetime,swwtime is use for work the average weightwholetime
 int i,arithmetic;//arithmetic is use for choose arithmetics

 void fcfs()
  {
   for(i=0;i<num;i++)
   {
  if(time1[i]>nowtime) //when the arrivaltime is later than now time
 {
   nowtime=time1[i];//now time equals to arrivaltime
  }
  nowtime=nowtime+time2[i];//work out the sum of arrivaltime and servicetime
  time3[i]=nowtime;//finishtime
  time4[i]=time3[i]-time[i];//work out the wholetime
  wtime4[i]=(double)time4[i]/time2[i];work out the weightwholetime
  swtime=swtime+time4[i];//work out the sum of the wholetime
  swwtime=swwtime+wtime4[i];//work out the sum of the weightwholetime
 }
 fcfs_atime4=swtime/num;//average wholetimg
 fcfs_awtime4=swwtime/num;//average weightwholetime
 for(i=0;i<num;i++)//print the result
{
  cout<<"arrival time":<<time3[i]-time2[i]<<": process"<<i+1<<"begin to run."<<"finish time:<<time3<<"the whole time:"<<time4[i]<<setprecision(3)<<"the weight whole time:"<< wtime4<<setprecision(3)<<endl;
}
 cout<<"average whole time："<<fcfs_atime4<<endl;
	cout<<"average weight whole time："<<fcfs_awtime4<<endl;
}

void sjf()
{
  int min=0;
	nowtime=time1[0]+time2[0];//work out the first nowtime
        time3[0]=nowtime;//work out the first process's finish time
	sjf[0]=1000;//make a first worth
	cout<<"time"<<time3[0]-time2[0]<<": process"<<1<<"begin to run。";
	int allin=0,j,k;
	for(i=1;i<Num;i++)//into circulte，the second process begin to run
	{
		k=1;min=0;
		if(allin==0)//fink out the numbers of process
		{
			j=0;
			while(time1[j]<=nowtime && j<num)//the process which is arrival
			{
				j++;
				if(j>=num)
				{
					allin=1;
				}
			}
		}
		else
		{
			j=num;
		}
		j=j-1;//j is the process which is arrival
		while(k<=j)//find out the least service time of process from the arrival process
		{
			if(sjf[k]==0)//if the service time of process equals to 0，so pass it
				k++;
			else
			{
				if(sjf[min]>sjf[k])//compared and find out the shorter service time of the process
					min=k;
				k++;
			}
		}
		sjf[min]=0;//make if equals to 0，for the next circulte
		nowtime=nowtime+time2[min];//add up the time
		time3[min]=nowtime;//finish time
	}
	for(i=0;i<Num;i++)//work out the whole time，the weight whole time，sum of the wholetime and the weightwholetime
	{
		time4[i]=time3[i]-time1[i];
		wtime4[i]=(double)time4[i]/time2[i];
		swtime=swtime+time4[i];
		swwtime=swwtime+wtime4[i];
	}
	sjf_atime=swtime/num;//average the wholetime
        sjf_awtime=swwtime/num;//average the weightwholetime
	cout<<"  finish time："<<time3[0]<<"  the whole time："<<time4[0]<<setprecision(3)<<"  the weight whole time："<<WeightWholeTime[0]<<setprecision(3)<<endl;
	for(i=1;i<Num;i++)//print the result
	{
		cout<<"time"<<time3[i]-time2[i]<<": process"<<i+1<<"begin to run。"<<"  finish："<<time3[i]<<"  the whole time："<<time4[i]<<setprecision(3)<<"  the weight whole time："<<wtime4[i]<<setprecision(3)<<endl;
	}
	cout<<"average the wholetime："<<sjf_atime<<endl;
	cout<<"average the weightwholetime："<<sjf_awtime<<endl;
}

void input()
{
	cout<<"please sign the number of process：";
	cin>>num;
	while(num>100||num<=0)
	{
		cout<<"the number must be less than 100！please sign again：";
		cin>>num;
	}
	
	for(i=0;i<num;i++)
	{
		cout<<"please sign process"<<i+1<<"：arrival time";
		cin>>time1[i];
	}
	
	for(i=0;i<num;i++)
	{
		int data=0;
		cout<<"please sign process"<<i+1<<" service time：";
		cin>>data;
		time2[i]=data;
		sjf[i]=data;
	}
	cout<<"choose your arithmetic(1-FCFS,2-SJF): ";
	cin>>arithmetic;
	
}


void main()
{

	char flag='y';
Loop:
	nowtime=0;swtime=0;swwtime=0;
    input();
	if(arithmetic==1)
		fcfs();//use the fcfs arithmetic
	else if(arithmetic==2)
		sjf();//use the sjf arithmetic
	else//error,please choose again
	{
		while(1)
		{
	  		cout<<"error,please choose again"<<endl;
			cout<<"choose the arithmetic you want to use(1-FCFS,2-SJF): ";
			cin>>arithmetic;
			if(arithmetic==1)
			{
				fcfs();
				break;
			}
			else if(arithmetic==2)
			{
				sjf();
				break;
			}
		}
	}
	cout<<endl<<"print'y'or'Y'to continue，anyoneelse to quit：";
	cin>>flag;
	if(flag=='y' || flag=='Y')
		goto Loop;
}


	