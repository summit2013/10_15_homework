实现语言：C++
#include<iostream>
using namespace std;
#define num 94;
int  ArrivalTime[num];
double  ServiceTime[num];
double  FinishTime[num];
double  WholeTime[num];
double  AVEWholeTime[num];
double  AVEWeightWholeTime[num];
double  WeightWholeTime[num];
double AverageWT_FCFS,AverageWT_SJF; 
double AverageWWT_FCFS,AverageWWT_SJF;
double AllTime,WeightAllTime;
double a[num];
int b[num];
int c[num];
int d[num];
void FCFS();
void SJF();

void FCFS()
{
  int ProcessNum;
	cout<<"----------先来先服务算法----------"<<endl;
	cout<<"请输入进程个数：";
	cin>>ProcessNum;
	cout<<"输入进程到达时间：";
	cout<<endl;
	for(int i=0;i<ProcessNum;i++)
	{
		cin>>ArrivalTime[i];
		//cout<<endl;
	}
	cout<<endl;
	cout<<"请输入进程服务时间：";
	cout<<endl;
	for(int i=0;i<ProcessNum;i++)
	{
		cin>>ServiceTime[i];
		//cout<<endl;
	}
	cout<<endl;
	for(int i=0;i<ProcessNum;i++)
	{
		FinishTime[i]=ServiceTime[i];
	}
	for(int i=0;i<ProcessNum;i++)
	{
		FinishTime[i+1]=FinishTime[i]+FinishTime[i+1];
	}
	for(int i=0;i<ProcessNum-1;i++)
	{
		cout<<"时刻"<<FinishTime[i]<<":第"<<i+2<<"个进程开始运行。"<<endl;
	}
	cout<<"PCFS完成时间：";
	for(int i=0;i<ProcessNum;i++)
	{
		cout<<FinishTime[i]<<"  ";
	}
	cout<<endl;
	cout<<"PCFS周转时间：";
	for(int i=0;i<ProcessNum;i++)
	{
		WholeTime[i]=FinishTime[i]-ArrivalTime[i];
	}
	for(int i=0;i<ProcessNum;i++)
	{
		cout<<WholeTime[i]<<"  ";
	}
	cout<<endl;
	cout<<"PCFS平均周转时间：";
	for(int i=0;i<ProcessNum;i++)
	{
		AVEWholeTime[i]=WholeTime[i];
		//cout<<AVEWholeTime[i]<<endl;
	}
	for(int i=0;i<ProcessNum;i++)
	{
		AVEWholeTime[i+1]=AVEWholeTime[i]+AVEWholeTime[i+1];
		//cout<<AVEWholeTime[i+1]<<endl;
		AllTime=AVEWholeTime[i+1];

	}
	cout<<AllTime<<"   ";
	AverageWT_FCFS=AllTime/ProcessNum;
	cout<<"平均周转时间"<<AverageWT_FCFS<<endl;
	cout<<"PCFS带权周转时间：";
	for(int i=0;i<ProcessNum;i++)
	{
		WeightWholeTime[i]=WholeTime[i]/ServiceTime[i];
	}
	for(int i=0;i<ProcessNum;i++)
	{
		cout<<WeightWholeTime[i]<<"  ";
	}
	cout<<endl;
	cout<<"PCFS平均带权周转时间：";
	for(int i=0;i<ProcessNum;i++)
	{
		AVEWeightWholeTime[i]=WeightWholeTime[i];
		//cout<<AVEWeightWholeTime[i]<<endl;
	}
	for(int i=0;i<ProcessNum;i++)
	{
		AVEWeightWholeTime[i+1]=AVEWeightWholeTime[i]+AVEWeightWholeTime[i+1];
		WeightAllTime=AVEWeightWholeTime[i+1];
		//cout<<WeightAllTime<<endl;
	}
	AverageWWT_FCFS=WeightAllTime/ProcessNum;
	cout<<"平均带权周转时间"<<AverageWWT_FCFS<<endl;
}
void SJF()
{
	int ProcessNum;
	cout<<"----------短作业优先算法----------"<<endl;
	cout<<"请输入进程个数：";
	cin>>ProcessNum;
	cout<<"输入进程到达时间：";
	cout<<endl;
	for(int i=0;i<ProcessNum;i++)
	{
		cin>>ArrivalTime[i];
		//cout<<endl;
	}
	cout<<endl;
	cout<<"请输入进程服务时间：";
	cout<<endl;
	for(int i=0;i<ProcessNum;i++)
	{
		cin>>ServiceTime[i];
		//cout<<endl;
	}
	cout<<endl;
	for(int i=0;i<ProcessNum;i++)
	{
		a[i]=ServiceTime[i];
	}
	for(int i=1;i<ProcessNum-1;i++)//实现从第一位开始排序
	{
		double exchange;
		for(int j=i+1;j<ProcessNum;j++)
		{
			if(a[i]>a[j])
			{
				exchange=a[i];
				a[i]=a[j];
				a[j]=exchange;
			}
		}
	}
	FinishTime[0]=ServiceTime[0];
	for(int i=1;i<ProcessNum;i++)//获取数组下标
	{
		//b[0]=0;
		for(int j=1;j<ProcessNum;j++)
		{
			if(a[i]==ServiceTime[j])
			{
				b[i]=j;
				//cout<<j<<endl;
				break;
			}
		}
	}
	for(int i=1;i<ProcessNum;i++)
	{
		
		if(FinishTime[b[i-1]]<ArrivalTime[b[i]])
		{
			//cout<<b[i]<<" "<<b[i+1]<<endl;
			int temp;
			temp=b[i];
			b[i]=b[i+1];
			b[i+1]=temp;
		}
	        a[i]=ServiceTime[b[i]];
		a[i]=a[i-1]+a[i];
		FinishTime[b[i]]=a[i];
	}
	for(int i=0;i<ProcessNum-1;i++)
	{
		cout<<"时刻"<<FinishTime[i]<<":第"<<i+2<<"个进程开始运行。"<<endl;
	}
	cout<<"SJF完成时间：";
	for(int i=0;i<ProcessNum;i++)
	{
		cout<<FinishTime[i]<<"  ";
	}
	cout<<endl;
	cout<<"SJF周转时间：";
	for(int i=0;i<ProcessNum;i++)
	{
		WholeTime[i]=FinishTime[i]-ArrivalTime[i];
	}
	for(int i=0;i<ProcessNum;i++)
	{
		cout<<WholeTime[i]<<"  ";
	}
	cout<<endl;
	cout<<"SJF 平均周转时间：";
	for(int i=0;i<ProcessNum;i++)
	{
		AVEWholeTime[i]=WholeTime[i];
		//cout<<AVEWholeTime[i]<<endl;
	}
	for(int i=0;i<ProcessNum;i++)
	{
		AVEWholeTime[i+1]=AVEWholeTime[i]+AVEWholeTime[i+1];
		//cout<<AVEWholeTime[i+1]<<endl;
		AllTime=AVEWholeTime[i+1];

	}
	//cout<<AllTime;
	AverageWT_SJF=AllTime/ProcessNum;
	cout<<"平均周转时间"<<AverageWT_SJF<<endl;
	cout<<"SJF带权周转时间：";
	for(int i=0;i<ProcessNum;i++)
	{
		WeightWholeTime[i]=WholeTime[i]/ServiceTime[i];
	}
	for(int i=0;i<ProcessNum;i++)
	{
		cout<<WeightWholeTime[i]<<"  ";
	}
	cout<<endl;
	cout<<"SJF平均带权周转时间：";
	for(int i=0;i<ProcessNum;i++)
	{
		AVEWeightWholeTime[i]=WeightWholeTime[i];
		//cout<<AVEWeightWholeTime[i]<<endl;
	}
	for(int i=0;i<ProcessNum;i++)
	{
		AVEWeightWholeTime[i+1]=AVEWeightWholeTime[i]+AVEWeightWholeTime[i+1];
		WeightAllTime=AVEWeightWholeTime[i+1];
		//cout<<WeightAllTime<<endl;
	}
	AverageWWT_SJF=WeightAllTime/ProcessNum;
	cout<<"平均带权周转时间"<<AverageWWT_SJF<<endl;
}
void main()
{
	char flag='Y';
	char n;
	cout<<"----------调度算法FCFS && SJF-----------"<<endl;;
	while(flag=='Y'||flag=='y')
	{ 
		cout<<endl;
		cout<<"1、先来先服务 FCFS 算法 ."<<endl;
		cout<<"2、短作业优先 SJF 算法."<<endl;
	    cout<<"请您选择算法的序号："<<endl;
		cin>>n;
	    switch(n)
		{
		case'1':
			FCFS();
		    break;
	    case'2':
		    SJF();
			break;
		default:
			cout<<endl;
			cout<<"您输出有误!"<<endl;
			break;
		}
		cout<<endl;
		cout<<"是否继续调度算法FCFS && SJF，按'Y'or'y'钮继续,按'N'or'n'键退出"<<endl;
		cin>>flag;
	}
}